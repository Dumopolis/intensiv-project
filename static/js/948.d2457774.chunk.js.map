{"version":3,"file":"static/js/948.d2457774.chunk.js","mappings":"wSA0GA,IAvFA,SAAsBA,GAA4C,IAAzCC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAAaC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OAAQC,EAAEL,EAAFK,GAEjDC,GAAsBC,EAAAA,EAAAA,IAAgBL,EAAa,KACnDM,GAAgBD,EAAAA,EAAAA,IAAgBJ,EAAO,IACvCM,GAAeC,EAAAA,EAAAA,IAAWT,GAExBU,GAAWC,EAAAA,EAAAA,KAAXD,OACRE,GAAsEC,EAAAA,EAAAA,GAAuBT,GAArFU,EAA2BF,EAA3BE,4BAA6BC,EAAiBH,EAAjBG,kBAAmBC,EAASJ,EAATI,UAClDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAETC,GAA2BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCF,uBAuBR,OANAG,EAAAA,EAAAA,YAAU,WACNV,GAEJ,GAAG,CAACJ,KAIAe,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,GAAI,CACNC,MAAO,IACPC,OAAQ,GACVC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAC9B,MAAOK,EACfoB,GAAI,CACAM,UAAW,GACXC,UAAW,aAGnBH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACNC,UAAU,MACVC,OAAO,MACPC,MAAOnC,EACPoC,IAAKrC,KAETuB,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,GAAI,CACbM,UAAW,KACbH,SAAA,EACEC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBb,SAC7CtB,KAELuB,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBb,SAC7CzB,QAIToB,EAAAA,EAAAA,MAACmB,EAAAA,EAAW,CAACC,gBAAc,EAAAf,SAAA,EACvBC,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACC,KAAK,SAASC,QAlDhB,WACVtC,EACAO,EAAS,SAADgC,OAAU7C,IAElBe,GACI+B,EAAAA,EAAAA,IAAU,CACNC,SAAU,OACVjD,MAAO,+BACPkD,KAAK,iEAKrB,EAqCsDT,MAAM,YAAWb,SAAC,gBAC5DC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAAC,aAAW,mBAAmBV,MAAO3B,EAAWgC,QAASjC,EAAmBY,GAAI,CACxF2B,WAAY,QACdxB,UACEC,EAAAA,EAAAA,KAACwB,EAAAA,EAAY,MAEhBlC,IACGU,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACG,KAAI,8DAAAP,OAAgE7C,GAAM,aAAW,oBAAmB0B,UAChHC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,WAMrC,C,wKCrDA,MA7BA,SAAqB1D,GAAU,IAAPK,EAAEL,EAAFK,GACpBsD,GAAwDC,EAAAA,EAAAA,IAAmBvD,GAA7DwD,EAAQF,EAAdG,KAAgBC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAAOC,EAASN,EAATM,UAE1C,OAAIF,GAGI/B,EAAAA,EAAAA,KAACkC,EAAAA,GAAaC,EAAAA,EAAAA,GAAA,GAAKN,IAGhBG,GAGHtC,EAAAA,EAAAA,MAAC0C,EAAAA,EAAG,CAACC,QAAS,EAAEtC,SAAA,EACZC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQR,UAAU,SAAQJ,SAAC,qCAC/CC,EAAAA,EAAAA,KAAA,OAAKsC,IAAK/B,EAAOC,IAAI,QAAQ+B,MAAO,CAAEC,QAAS,QAAS3C,MAAO,MAAOC,OAAQ,eAI/EmC,GAEAjC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,SAFX,CAKX,EC9Be,SAASC,IACtB,IAAQC,GAAcC,EAAAA,EAAAA,KAAdD,UAER,OAAIA,EAAUE,QAGVnD,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAA/C,SAAA,EACEC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CACTC,QAAQ,KACRR,UAAU,SACVP,GAAI,CACFmD,WAAY,EACZC,SAAU,QACVjD,SAAC,eAGLC,EAAAA,EAAAA,KAAA,OAAKiD,UAAU,mBAAkBlD,SAC9B4C,EAAUO,KAAI,SAACC,GAAY,OAAKnD,EAAAA,EAAAA,KAACoD,EAAY,CAAoB/E,GAAI8E,GAAlBA,EAAkC,UAO5FnD,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKR,UAAW,SAAUkC,QAAS,EAAEtC,SAAC,iCAI9D,C,qECjCO,SAASnB,IACf,IAAQyE,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAA3CH,MAER,MAAO,CACN1E,OAAQ8E,QAAQJ,GAChBA,MAAAA,EAEF,C,oJCAO,SAASvE,EAAuBT,GACtC,IAAAqF,GAAkCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CzE,EAAS2E,EAAA,GAAEE,EAAYF,EAAA,GAEtBjF,GAAWC,EAAAA,EAAAA,KAAXD,OAEAoF,GAAQnB,EAAAA,EAAAA,KAARmB,IAEF3E,GAAWC,EAAAA,EAAAA,MAkEjB,MAAO,CAAEN,4BAV2B,WACnC,IACMiF,GADWC,KAAKC,MAAMC,aAAaC,QAAQL,KAAS,CAAC,GAC5BpB,UACzB0B,EACLL,GACAA,EAAcM,MAAK,SAACC,GAAc,OAAKA,IAAmBlG,CAAE,IAE7DyF,EADkBO,EAAa,YAAc,UAE9C,EAEsCrF,kBA5BZ,WACrBL,EACe,YAAdM,EAtCiB,WACtB6E,EAAa,aACb,IAAMU,EAAcL,aAAaC,QAAQL,GACzC,GAAIS,EAAa,CAChB,IAAMC,EAAWR,KAAKC,MAAMM,GACtBE,GAAevC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBsC,GAAQ,IACX9B,UAAU,GAADzB,QAAAyD,EAAAA,EAAAA,GAAMF,EAAS9B,WAAS,CAAEtE,MAEpCe,GAASwF,EAAAA,EAAAA,IAAQF,IACjBP,aAAaU,QAAQd,EAAKE,KAAKa,UAAUJ,GAC1C,MACCtF,GACC+B,EAAAA,EAAAA,IAAU,CACTC,SAAU,QACVjD,MAAO,4BACPkD,KAAM,oEAIV,CAmBG0D,GAjBuB,WACzBjB,EAAa,WACb,IAAMW,EAAWR,KAAKC,MAAMC,aAAaC,QAAQL,IAC3CiB,EAAsBP,EAAS9B,UAAUsC,QAC9C,SAACV,GAAc,OAAKA,IAAmBlG,CAAE,IAEpC6G,GAAc/C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBsC,GAAQ,IACX9B,UAAWqC,IAEZ5F,GAASwF,EAAAA,EAAAA,IAAQM,IACjBf,aAAaU,QAAQd,EAAKE,KAAKa,UAAUI,GAC1C,CAOGC,GAGD/F,GACC+B,EAAAA,EAAAA,IAAU,CACTC,SAAU,OACVjD,MAAO,mCACPkD,KAAK,qEAIT,EAYyDpC,UAAAA,EAC1D,C,qECjFO,SAAS2D,IACf,IAAAwC,GACC9B,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAElC,MAAO,CACNO,IAJUqB,EAAHrB,IAKPV,MALiB+B,EAAL/B,MAMZV,UAN4ByC,EAATzC,UAOnB0C,kBAP+CD,EAAjBC,kBAQ9BC,cAR8DF,EAAbE,cAUnD,C,kJCXMC,EAAY,CAAC,YAAa,a,iCCG1BC,GAAeC,EAAAA,EAAAA,KACfrD,EDGS,WAAiC,IAAdsD,EAAOC,UAAA9C,OAAA,QAAA+C,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEzCE,EAIEH,EAJFG,QACAL,EAGEE,EAHFF,aAAYM,EAGVJ,EAFFK,iBAAAA,OAAgB,IAAAD,EAAG,cAAaA,EAChCE,EACEN,EADFM,kBAEIC,GAAUC,EAAAA,EAAAA,IAAO,MAAO,CAC5BC,kBAAmB,SAAAC,GAAI,MAAa,UAATA,GAA6B,OAATA,GAA0B,OAATA,CAAa,GAD/DF,CAEbG,EAAAA,GAgBH,OAfyBC,EAAAA,YAAiB,SAAaC,EAASC,GAC9D,IAAMC,GAAQC,EAAAA,EAAAA,GAASlB,GACjBmB,GAAgBC,EAAAA,EAAAA,GAAaL,GAE/BtD,EAEE0D,EAFF1D,UAAS4D,EAEPF,EADFtG,UAAAA,OAAS,IAAAwG,EAAG,MAAKA,EAEnBC,GAAQC,EAAAA,EAAAA,GAA8BJ,EAAepB,GACvD,OAAoBvF,EAAAA,EAAAA,KAAKiG,GAASe,EAAAA,EAAAA,GAAS,CACzCC,GAAI5G,EACJmG,IAAKA,EACLvD,WAAWiE,EAAAA,EAAAA,GAAKjE,EAAW+C,EAAoBA,EAAkBD,GAAoBA,GACrFU,MAAOZ,GAAUY,EAAMZ,IAAoBY,GAC1CK,GACL,GAEF,CC7BYK,CAAU,CACpBtB,QAASuB,EAAAA,EACT5B,aAAAA,EACAO,iBAAkB,cAClBC,kBAAmBqB,EAAAA,EAAmBC,WAqBxC,G","sources":["components/Card/CardComponent.jsx","components/FavoriteCard/FavoriteCard.jsx","components/Favorites/Favorites.jsx","hooks/useAuth.js","hooks/useFavoriteManipulator.js","hooks/useUser.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport { Button, CardActions, CardContent, CardHeader, CardMedia, IconButton, Typography } from '@mui/material';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\n\r\nimport { FeatureFlagContext } from '../../context/context';\r\n\r\nimport { showAlert } from '../../store/slices/alertSlice';\r\nimport { formatDate, formatForLenght } from '../../formating/formating';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useFavoriteManipulator } from '../../hooks/useFavoriteManipulator';\r\n\r\n\r\nfunction CardComponent({ date, description, title, urlImg, id }) {\r\n\r\n    const descriptionFormated = formatForLenght(description, 150);\r\n    const titleFormated = formatForLenght(title, 50);\r\n    const dateFormated = formatDate(date);\r\n\r\n    const { isAuth } = useAuth();\r\n    const { setFavoriteFromLocalStorage, toggleToFavorites, iconState } = useFavoriteManipulator(id);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isTelegramShareEnabled } = useContext(FeatureFlagContext);\r\n\r\n    const tryToOpen = () => {\r\n        if (isAuth) {\r\n            navigate(`/news/${id}`);\r\n        } else {\r\n            dispatch(\r\n                showAlert({\r\n                    severity: \"info\",\r\n                    title: \"Sorry... You can`t open card\",\r\n                    text: `If you want open card, you need authenticate or registration`,\r\n                })\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFavoriteFromLocalStorage();\r\n        // eslint-disable-next-line\r\n    }, [isAuth]);\r\n\r\n\r\n    return (\r\n        <Card sx={{\r\n            width: 345,\r\n            margin: 2,\r\n        }}>\r\n            <CardHeader title={titleFormated}\r\n                sx={{\r\n                    minHeight: 95,\r\n                    textAlign: 'center'\r\n                }}\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={urlImg}\r\n                alt={title} />\r\n\r\n            <CardContent sx={{\r\n                minHeight: 120,\r\n            }}>\r\n                <Typography variant=\"body1\" color=\"text.secondary\" >\r\n                    {dateFormated}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {descriptionFormated}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions disableSpacing >\r\n                <Button size=\"normal\" onClick={tryToOpen} color='secondary'>Learn More</Button>\r\n                <IconButton aria-label=\"add to favorites\" color={iconState} onClick={toggleToFavorites} sx={{\r\n                    marginLeft: 'auto',\r\n                }}>\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                {isTelegramShareEnabled &&\r\n                    <IconButton href={`https://t.me/share/url?url=https://images.nasa.gov/details/${id}`} aria-label=\"share on telegram\" >\r\n                        <TelegramIcon />\r\n                    </IconButton>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nCardComponent.propTypes = {\r\n    date: PropTypes.string,\r\n    description: PropTypes.string,\r\n    title: PropTypes.string,\r\n    urlImg: PropTypes.string,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default CardComponent;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nimport { useGetOneNewsQuery } from '../../store/slices/nasaApi';\r\n\r\nimport image from '../../img/sorry.gif';\r\n\r\n\r\nimport CardComponent from '../Card/CardComponent';\r\nimport Loader from '../Loader/Loader';\r\n\r\nfunction FavoriteCard({ id }) {\r\n    const { data: newsItem, isSuccess, error, isLoading } = useGetOneNewsQuery(id);\r\n\r\n    if (isSuccess) {\r\n\r\n        return (\r\n            <CardComponent {...newsItem} />\r\n        );\r\n\r\n    } else if (error) {\r\n\r\n        return (\r\n            <Box padding={2}>\r\n                <Typography variant='body1' textAlign='center'>Sorry... We can`t get this news</Typography>\r\n                <img src={image} alt='sorry' style={{ display: 'block', width: '70%', margin: '0 auto' }} />\r\n            </Box>\r\n        );\r\n\r\n    } else if (isLoading) {\r\n\r\n        return <Loader />;\r\n    }\r\n\r\n}\r\n\r\nFavoriteCard.propTypes = {\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default FavoriteCard;","import React from 'react';\r\n\r\nimport { Typography } from '@mui/material';\r\n\r\nimport { useUser } from '../../hooks/useUser';\r\nimport FavoriteCard from '../FavoriteCard/FavoriteCard';\r\n\r\nexport default function Favorites() {\r\n  const { favorites } = useUser();\r\n\r\n  if (favorites.length) {\r\n\r\n    return (\r\n      <>\r\n        <Typography\r\n          variant='h2'\r\n          textAlign='center'\r\n          sx={{\r\n            paddingTop: 5,\r\n            fontSize: '4rem'\r\n          }}>\r\n          FAVORITES\r\n        </Typography>\r\n        <div className='cards__container'>\r\n          {favorites.map((favoriteItem) => <FavoriteCard key={favoriteItem} id={favoriteItem} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <Typography variant='h2' textAlign={\"center\"} padding={5}>\r\n        You don`t have favorites yet.\r\n    </Typography>\r\n);\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nexport function useAuth() {\r\n\tconst { email } = useSelector((state) => state.user);\r\n\r\n\treturn {\r\n\t\tisAuth: Boolean(email),\r\n\t\temail\r\n\t};\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { showAlert } from \"../store/slices/alertSlice\";\r\nimport { setUser } from \"../store/slices/userSlice\";\r\n\r\nimport { useAuth } from \"./useAuth\";\r\nimport { useUser } from \"./useUser\";\r\n\r\nexport function useFavoriteManipulator(id) {\r\n\tconst [iconState, setIconState] = useState(\"default\");\r\n\r\n\tconst { isAuth } = useAuth();\r\n\r\n\tconst { uid } = useUser();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst addToFavorites = () => {\r\n\t\tsetIconState(\"secondary\");\r\n\t\tconst currentUser = localStorage.getItem(uid);\r\n\t\tif (currentUser) {\r\n\t\t\tconst userInfo = JSON.parse(currentUser);\r\n\t\t\tconst userAddFavorite = {\r\n\t\t\t\t...userInfo,\r\n\t\t\t\tfavorites: [...userInfo.favorites, id],\r\n\t\t\t};\r\n\t\t\tdispatch(setUser(userAddFavorite));\r\n\t\t\tlocalStorage.setItem(uid, JSON.stringify(userAddFavorite));\r\n\t\t} else {\r\n\t\t\tdispatch(\r\n\t\t\t\tshowAlert({\r\n\t\t\t\t\tseverity: \"error\",\r\n\t\t\t\t\ttitle: \"Sorry... Unexpected error\",\r\n\t\t\t\t\ttext: \"We are already working on this error. You need re-authenticate!\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst removeAtFavorites = () => {\r\n\t\tsetIconState(\"default\");\r\n\t\tconst userInfo = JSON.parse(localStorage.getItem(uid));\r\n\t\tconst filterFavoritesList = userInfo.favorites.filter(\r\n\t\t\t(localStorageId) => localStorageId !== id\r\n\t\t);\r\n\t\tconst removeFavorite = {\r\n\t\t\t...userInfo,\r\n\t\t\tfavorites: filterFavoritesList,\r\n\t\t};\r\n\t\tdispatch(setUser(removeFavorite));\r\n\t\tlocalStorage.setItem(uid, JSON.stringify(removeFavorite));\r\n\t};\r\n\r\n\tconst toggleToFavorites = () => {\r\n\t\tif (isAuth) {\r\n\t\t\tif (iconState === \"default\") {\r\n\t\t\t\taddToFavorites();\r\n\t\t\t} else {\r\n\t\t\t\tremoveAtFavorites();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdispatch(\r\n\t\t\t\tshowAlert({\r\n\t\t\t\t\tseverity: \"info\",\r\n\t\t\t\t\ttitle: \"Sorry... You can`t use favorites\",\r\n\t\t\t\t\ttext: `If you want use favorites, you need authenticate or registration`,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst setFavoriteFromLocalStorage = () => {\r\n\t\tconst userInfo = JSON.parse(localStorage.getItem(uid)) || {};\r\n\t\tconst favoritesList = userInfo.favorites;\r\n\t\tconst isFavorite =\r\n\t\t\tfavoritesList &&\r\n\t\t\tfavoritesList.find((localStorageId) => localStorageId === id);\r\n\t\tconst iconState = isFavorite ? \"secondary\" : \"default\";\r\n\t\tsetIconState(iconState);\r\n\t};\r\n\r\n\treturn { setFavoriteFromLocalStorage, toggleToFavorites, iconState };\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nexport function useUser() {\r\n\tconst { uid, email, favorites, openedCardHistory, searchHistory } =\r\n\t\tuseSelector((state) => state.user);\r\n\r\n\treturn {\r\n\t\tuid,\r\n\t\temail,\r\n\t\tfavorites,\r\n\t\topenedCardHistory,\r\n\t\tsearchHistory,\r\n\t};\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["_ref","date","description","title","urlImg","id","descriptionFormated","formatForLenght","titleFormated","dateFormated","formatDate","isAuth","useAuth","_useFavoriteManipulat","useFavoriteManipulator","setFavoriteFromLocalStorage","toggleToFavorites","iconState","navigate","useNavigate","dispatch","useDispatch","isTelegramShareEnabled","useContext","FeatureFlagContext","useEffect","_jsxs","Card","sx","width","margin","children","_jsx","CardHeader","minHeight","textAlign","CardMedia","component","height","image","alt","CardContent","Typography","variant","color","CardActions","disableSpacing","Button","size","onClick","concat","showAlert","severity","text","IconButton","marginLeft","FavoriteIcon","href","TelegramIcon","_useGetOneNewsQuery","useGetOneNewsQuery","newsItem","data","isSuccess","error","isLoading","CardComponent","_objectSpread","Box","padding","src","style","display","Loader","Favorites","favorites","useUser","length","_Fragment","paddingTop","fontSize","className","map","favoriteItem","FavoriteCard","email","useSelector","state","user","Boolean","_useState","useState","_useState2","_slicedToArray","setIconState","uid","favoritesList","JSON","parse","localStorage","getItem","isFavorite","find","localStorageId","currentUser","userInfo","userAddFavorite","_toConsumableArray","setUser","setItem","stringify","addToFavorites","filterFavoritesList","filter","removeFavorite","removeAtFavorites","_useSelector","openedCardHistory","searchHistory","_excluded","defaultTheme","createTheme","options","arguments","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","_extendSxProp$compone","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","generate"],"sourceRoot":""}